# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
             
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
#  configure_aws_cli:
#    docker:
#      - image: amazon/aws-cli
#    steps:
#      - run:
#          name: Configure AWS Access Key ID
#          command: aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID 
#      - run:
#          name: Configure AWS Secret Access Key
#          command: aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY 
#      - run:
#          name: Configure AWS default region
#          command: aws configure set region $AWS_DEFAULT_REGION 

  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1

#  push_ssh_EC2: 
#    docker: 
#      - image: cimg/base:2022.10
#    steps: 
#      - checkout
#      - run: ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@54.167.109.99
#      - run: logout
# Exercise: Config and Deployment

#  configure_infrastructure: 
#    docker:
#      - image: python:3.7-alpine3.11
#    steps:
#      - checkout
#      - add_ssh_keys:
#          fingerprints: ["91:b8:d2:01:82:15:89:bd:36:52:df:95:e9:22:ac:a3"] # 
#      - run:
#          name: Install dependencies
#          command: |
#            # install the dependencies needed for your playbook
#            apk add --update ansible 
#      - run:
#          name: Run Playbook and Configure server
#          command: |
#            ansible-playbook main-remote.yml -i inventory --private-key key.pem

  smoke_test:
    docker: 
      - image: alpine:latest
    steps: 
      - checkout
      - run: return 1
      - destroy_environment

# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  configure:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires: 
            - create_infrastructure

